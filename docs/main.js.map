{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.reducers.ts","webpack:///./src/app/filter/filter.actions.ts","webpack:///./src/app/filter/filter.pipe.ts","webpack:///./src/app/filter/filter.reducer.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/todo/model/todo.model.ts","webpack:///./src/app/todo/todo-add/todo-add.component.html","webpack:///./src/app/todo/todo-add/todo-add.component.ts","webpack:///./src/app/todo/todo-footer/todo-footer.component.html","webpack:///./src/app/todo/todo-footer/todo-footer.component.ts","webpack:///./src/app/todo/todo-item/todo-item.component.html","webpack:///./src/app/todo/todo-item/todo-item.component.ts","webpack:///./src/app/todo/todo.actions.ts","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/app/todo/todo.reducer.ts","webpack:///./src/app/todo/todos-list/todos-list.component.html","webpack:///./src/app/todo/todos-list/todos-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-todo></app-todo>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// ngrx\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment'; // Angular CLI environemnt\n\n// Forms\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodosListComponent } from './todo/todos-list/todos-list.component';\nimport { TodoItemComponent } from './todo/todo-item/todo-item.component';\nimport { TodoFooterComponent } from './todo/todo-footer/todo-footer.component';\nimport { TodoAddComponent } from './todo/todo-add/todo-add.component';\nimport { appReducers } from './app.reducers';\nimport { FilterPipe } from './filter/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    TodoComponent,\n    TodosListComponent,\n    TodoItemComponent,\n    TodoFooterComponent,\n    TodoAddComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Todo } from './todo/model/todo.model';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as fromTodo from './todo/todo.reducer';\r\nimport * as fromFilter from './filter/filter.reducer';\r\nimport * as fromFilterActions from './filter/filter.actions';\r\n\r\nexport interface AppState {\r\n    todos: Todo[];\r\n    filter: fromFilterActions.validFilters;\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n    todos: fromTodo.todoReducer,\r\n    filter: fromFilter.filterReducer\r\n};\r\n","import { Action } from '@ngrx/store';\r\n\r\nexport const SET_FILTER = '[Filter] Set Filtro';\r\n\r\nexport type validFilters = 'all' | 'completed' | 'active';\r\n\r\nexport class SetFilterAction implements Action {\r\n  readonly type = SET_FILTER;\r\n\r\n  constructor(public filter: validFilters) {}\r\n}\r\n\r\nexport type actions = SetFilterAction;\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Todo } from '../todo/model/todo.model';\nimport * as fromFilter from './filter.actions';\n\n@Pipe({\n  name: 'filterTodo'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(todos: Todo[], filter: fromFilter.validFilters): Todo[] {\n    let res;\n\n    switch (filter) {\n      case 'completed':\n        res = todos.filter(todo => todo.completed);\n        break;\n      case 'active':\n        res = todos.filter(todo => !todo.completed);\n        break;\n      default:\n        res = todos;\n    }\n\n    return res;\n  }\n}\n","import * as fromFilter from './filter.actions';\r\n\r\nconst initialState: fromFilter.validFilters = 'all';\r\n\r\nexport function filterReducer(\r\n  state = initialState,\r\n  action: fromFilter.actions\r\n): fromFilter.validFilters {\r\n  let res;\r\n\r\n  switch (action.type) {\r\n    case fromFilter.SET_FILTER:\r\n      res = action.filter;\r\n      break;\r\n    default:\r\n      res = state;\r\n  }\r\n\r\n  return res;\r\n}\r\n","module.exports = \"<footer class=\\\"info\\\">\\n  <p>Double-click to edit a todo</p>\\n  <!-- Remove the below line ↓ -->\\n  <p>Template by <a href=\\\"http://sindresorhus.com\\\">Sindre Sorhus</a></p>\\n  <!-- Change this out with your name and url ↓ -->\\n  <p>Created by <a href=\\\"http://todomvc.com\\\">you</a></p>\\n  <p>Part of <a href=\\\"http://todomvc.com\\\">TodoMVC</a></p>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styles: []\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Todo {\r\n    public id: number;\r\n    public text: string;\r\n    public completed: boolean;\r\n\r\n    constructor(text: string) {\r\n        this.text = text.charAt(0).toUpperCase() + text.slice(1);\r\n        this.completed = false;\r\n        // This is an example app,\r\n        // On a real app, please use another method to assign an id.\r\n        this.id = Math.random();\r\n    }\r\n}\r\n","module.exports = \"<header class=\\\"header\\\">\\n  <h1>todos</h1>\\n  <input class=\\\"new-todo\\\" \\n    placeholder=\\\"What needs to be done?\\\" \\n    [formControl]=\\\"txtInput\\\"\\n    (keyup.enter)=\\\"addTodo()\\\"\\n    autofocus>\\n</header>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../app.reducers';\n\nimport * as fromTodo from '../todo.actions';\n\n@Component({\n  selector: 'app-todo-add',\n  templateUrl: './todo-add.component.html',\n  styles: []\n})\nexport class TodoAddComponent implements OnInit {\n\n  txtInput: FormControl;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.txtInput = new FormControl('', Validators.required);\n  }\n\n  addTodo() {\n    if (this.txtInput.valid) {\n\n      const action = new fromTodo.AddTodoAction(this.txtInput.value);\n      this.store.dispatch(action);\n\n      this.txtInput.setValue('');\n    }\n  }\n\n}\n","module.exports = \"<footer class=\\\"footer\\\">\\n  <!-- This should be `0 items left` by default -->\\n  <span class=\\\"todo-count\\\"><strong>{{active}}</strong> item left</span>\\n  <!-- Remove this if you don't implement routing -->\\n  <ul class=\\\"filters\\\">\\n    <li (click)=\\\"changeFilter(filter)\\\" *ngFor=\\\"let filter of validFilters\\\">\\n      <a [ngClass]=\\\"{ 'selected': filter === currentFilter }\\\">{{filter}}</a>\\n    </li>\\n  </ul>\\n  <!-- Hidden if no completed items are left ↓ -->\\n  <button (click)=\\\"removeCompleted()\\\" class=\\\"clear-completed\\\">Clear completed</button>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as fromFilter from '../../filter/filter.actions';\nimport * as fromTodo from '../todo.actions';\nimport { AppState } from '../../app.reducers';\nimport { Todo } from '../model/todo.model';\n\n@Component({\n  selector: 'app-todo-footer',\n  templateUrl: './todo-footer.component.html',\n  styles: []\n})\nexport class TodoFooterComponent implements OnInit {\n\n  active: number;\n  validFilters: fromFilter.validFilters[] = ['all', 'completed', 'active'];\n  currentFilter: fromFilter.validFilters;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.store.subscribe(state => {\n      this.currentFilter = state.filter;\n      this.countActive( state.todos );\n    });\n  }\n\n  changeFilter(newFilter: fromFilter.validFilters) {\n    const action = new fromFilter.SetFilterAction(newFilter);\n    this.store.dispatch(action);\n  }\n\n  countActive( todos: Todo[]) {\n    this.active = todos.filter(todo => !todo.completed ).length;\n  }\n\n  removeCompleted() {\n    const action = new fromTodo.RemoveAllTodoAction();\n    this.store.dispatch(action);\n  }\n}\n","module.exports = \"<li [ngClass]=\\\"{ 'completed': todo.completed,\\n                  'editing': editing }\\\" >\\n  <div class=\\\"view\\\">\\n    <input \\n      class=\\\"toggle\\\" \\n      type=\\\"checkbox\\\"\\n      [formControl]=\\\"chkField\\\"\\n      [checked]=\\\"todo.completed\\\">\\n    <label (dblclick)=\\\"edit()\\\" >{{todo.text}}</label>\\n    <button (click)=\\\"remove()\\\" class=\\\"destroy\\\"></button>\\n  </div>\\n  <input \\n    class=\\\"edit\\\" \\n    [value]=\\\"todo.text\\\"\\n    [formControl]=\\\"txtInput\\\"\\n    (blur)=\\\"finishEdition()\\\"\\n    #txtInputFisico>\\n</li>\"","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Todo } from '../model/todo.model';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AppState } from '../../app.reducers';\nimport { ToggleTodoAction, EditTodoAction, RemoveTodoAction } from '../todo.actions';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styles: []\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input() todo: Todo;\n  @ViewChild('txtInputElem') txtInputElem: ElementRef;\n\n  chkField: FormControl;\n  txtInput: FormControl;\n\n  editing: Boolean;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.chkField = new FormControl(this.todo.completed);\n    this.txtInput = new FormControl(this.todo.text, Validators.required);\n\n    this.chkField.valueChanges\n      .subscribe( () => {\n        const action = new ToggleTodoAction(this.todo.id);\n        this.store.dispatch(action);\n      });\n  }\n\n  edit() {\n    this.editing = true;\n\n    setTimeout(() => {\n     this.txtInputElem.nativeElement.select();\n    }, 1);\n  }\n\n  finishEdition() {\n    this.editing = false;\n\n    if (this.txtInput.valid && this.txtInput.value !== this.todo.text) {\n      const action = new EditTodoAction(this.todo.id, this.txtInput.value);\n      this.store.dispatch(action);\n    }\n  }\n\n  remove() {\n    const action = new RemoveTodoAction(this.todo.id);\n    this.store.dispatch(action);\n  }\n}\n","import { Action } from '@ngrx/store';\r\n\r\nexport const ADD_TODO = '[TODO] Add todo';\r\nexport const TOGGLE_TODO = '[TODO] Toggle todo';\r\nexport const TOGGLE_ALL_TODO = '[TODO] Toggle all todo';\r\nexport const EDIT_TODO = '[TODO] Edit todo';\r\nexport const REMOVE_TODO = '[TODO] Remove todo';\r\nexport const REMOVE_ALL_TODO = '[TODO] Remove all todo';\r\n\r\n\r\nexport class AddTodoAction implements Action {\r\n    readonly type = ADD_TODO;\r\n\r\n    constructor(public text: string) {}\r\n}\r\n\r\nexport class ToggleTodoAction implements Action {\r\n    readonly type = TOGGLE_TODO;\r\n\r\n    constructor(public id: number) {}\r\n}\r\n\r\nexport class EditTodoAction implements Action {\r\n    readonly type = EDIT_TODO;\r\n\r\n    constructor(public id: number, public text: string) {}\r\n}\r\n\r\nexport class RemoveTodoAction implements Action {\r\n    readonly type = REMOVE_TODO;\r\n\r\n    constructor(public id: number) {}\r\n}\r\n\r\nexport class ToggleAllTodoAction implements Action {\r\n    readonly type = TOGGLE_ALL_TODO;\r\n\r\n    constructor(public completed: boolean) {}\r\n}\r\n\r\nexport class RemoveAllTodoAction implements Action {\r\n    readonly type = REMOVE_ALL_TODO;\r\n}\r\n\r\nexport type Actions = AddTodoAction |\r\n                       ToggleTodoAction |\r\n                       EditTodoAction |\r\n                       RemoveTodoAction |\r\n                       ToggleAllTodoAction |\r\n                       RemoveAllTodoAction;\r\n","module.exports = \"<section class=\\\"todoapp\\\">\\n\\n  <app-todo-add></app-todo-add>\\n\\n  <!-- This section should be hidden by default and shown when there are todos -->\\n  <section class=\\\"main\\\">\\n    <input id=\\\"toggle-all\\\" class=\\\"toggle-all\\\" type=\\\"checkbox\\\">\\n    <label (click)=\\\"toggleAll()\\\" for=\\\"toggle-all\\\">Mark all as complete</label>\\n    <app-todo-list></app-todo-list>\\n  </section>\\n  <!-- This footer should hidden by default and shown when there are todos -->\\n  <app-todo-footer></app-todo-footer>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { ToggleAllTodoAction } from './todo.actions';\nimport { AppState } from '../app.reducers';\nimport {Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styles: []\n})\nexport class TodoComponent implements OnInit {\n\n  completed = false;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n  }\n\n  toggleAll() {\n    this.completed = !this.completed;\n\n    const action = new ToggleAllTodoAction(this.completed);\n    this.store.dispatch(action);\n  }\n\n}\n","import * as fromTodo from './todo.actions';\r\nimport { Todo } from './model/todo.model';\r\n\r\nconst INITIAL_STATE: Todo[] = [];\r\n\r\nexport function todoReducer(\r\n  state = INITIAL_STATE,\r\n  action: fromTodo.Actions\r\n): Todo[] {\r\n  let res;\r\n\r\n  switch (action.type) {\r\n    case fromTodo.ADD_TODO:\r\n      const todo = new Todo(action.text);\r\n      res = [...state, todo];\r\n      break;\r\n    case fromTodo.TOGGLE_TODO:\r\n      res = state.map(todoEdit => {\r\n        let resTodo: Todo;\r\n\r\n        if (todoEdit.id === action.id) {\r\n          resTodo = {\r\n            ...todoEdit,\r\n            completed: !todoEdit.completed\r\n          };\r\n        } else {\r\n          resTodo = todoEdit;\r\n        }\r\n\r\n        return resTodo;\r\n      });\r\n      break;\r\n    case fromTodo.TOGGLE_ALL_TODO:\r\n      res = state.map(currentTodo => ({\r\n        ...currentTodo,\r\n        completed: action.completed\r\n      }));\r\n      break;\r\n    case fromTodo.EDIT_TODO:\r\n      res = state.map(todoEdit => {\r\n        let resTodo: Todo;\r\n\r\n        if (todoEdit.id === action.id && todoEdit.text !== '') {\r\n          resTodo = {\r\n            ...todoEdit,\r\n            text: action.text\r\n          };\r\n        } else {\r\n          resTodo = todoEdit;\r\n        }\r\n\r\n        return resTodo;\r\n      });\r\n      break;\r\n    case fromTodo.REMOVE_TODO:\r\n      res = state.filter(x => x.id !== action.id);\r\n      break;\r\n    case fromTodo.REMOVE_ALL_TODO:\r\n      res = state.filter(x => !x.completed);\r\n      break;\r\n    default:\r\n      res = state;\r\n  }\r\n\r\n  return res;\r\n}\r\n","module.exports = \"<ul class=\\\"todo-list\\\">\\n  <app-todo-item [todo]=\\\"todo\\\" *ngFor=\\\"let todo of todos | filterTodo : filter\\\"></app-todo-item>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../app.reducers';\nimport { Todo } from '../model/todo.model';\nimport * as fromFilter from '../../filter/filter.actions';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todos-list.component.html',\n  styles: []\n})\nexport class TodosListComponent implements OnInit {\n\n  todos: Todo[] = [];\n  filter: fromFilter.validFilters;\n\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit() {\n    this.store.subscribe( state => {\n      this.todos = state.todos;\n      this.filter = state.filter;\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}